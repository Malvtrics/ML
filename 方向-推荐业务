推荐的目的是？
推荐能给公司带来？

目标：点击率
做推荐的基本点：货找人
PGC（全称：Professional Generated Content）互联网术语，指专业生产内容。用来泛指内容个性化、视角多元化、传播民主化、社会关系虚拟化
UGC（User Generated Content，也就是用户生成内容，即用户原创内容
CF = collabrative filtering 协同过滤算法 输出召回分支 -> i2i/u2u/u2i/tag2i/city2i/category2i (user,item) [key:value] 
这些city category等都是召回组的同学自己YY出来的，哈哈哈

埋点就是在应用中特定的流程收集一些信息，用来跟踪应用使用的状况，后续用来进一步优化产品或是提供运营的数据支撑，
包括访问数（Visits），访客数（Visitor），停留时长（Time On Site），页面浏览数（Page Views）和跳出率（Bounce Rate）。
这样的信息收集可以大致分为两种：页面统计（track this virtual page view），统计操作行为（track this button by an event）。

数据埋点的方式现在埋点的主流有两种方式：
第一种：自己公司研发在产品中注入代码统计，并搭建起相应的后台查询。
第二种：第三方统计工具，如友盟、神策、Talkingdata、GrowingIO等。

如果是产品早期，通常会使用第二种方式来采集数据，并直接使用第三方分析工具进行基本的分析。
而对于那些对数据安全比较重视，业务又相对复杂的公司则通常是使用第一种方式采集数据，并搭建相应的数据产品实现其数据应用或是分析的诉求。

feed是将用户主动订阅的若干消息源组合在一起形成内容聚合器，帮助用户持续地获取最新的订阅源内容。
feed流即持续更新并呈现给用户内容的信息流。

item特征举例
item的统计特征举例：
一双鞋在某10天内的销售量 
一双鞋在某30天内的销售量 
10与30被称为量纲，在实际项目中，对于不同的量纲，会采取不同的归一化的方式或其他不同的处理方式
平滑处理：要学习的东西-》贝叶斯平滑
不是通过简单的SUM AVG RATIO去处理，广告的例子：
某广告A 曝光100次，被点击一次
某广告B 曝光10000次，被点击10次
从字面上理解 CTR_A = 0.01 CTR_B = 0.001但是实际上不是这么简单的处理，会通过beta因子去处理
学习贝叶斯平滑中的beta因子

用户特征挖掘是实际应用中很重要的一部分
用户点击这个没有点击那个是一个很重要的埋点信息
原始日志是进入用户特征挖掘的重要入口
梳理到数据的最原始层，对业务能够有自己的一些想法
u2i特征偏统计类的特征，特征交叉一般用id类的特征

数据的存储和使用：
工业中对于大数据一般采用map-reduce数据库 比如hive
数据查询的两个阶段：mapper reducer
输入sql语句到mapper根据聚合函数reduce
均匀哈希分桶和数据倾斜：假设一种极端情况 在100W条数据中99W是一个uid
这样在mapper的时候会导致99W跑到一个桶里，其他的mapper都已经跑完了，只有第一个桶还在运行，浪费资源
因为reudcer要等所有的mapper结束后才能进行
所以我设计其他的规则让数据均匀分桶，不采用uid，或者用mapjoin的一些方法，减小reduce的压力，后面可以详细了解一下

在线数据和离线数据
一般离线数据是希望存的数据大
在线需要快，要快速展现给用户，所以关系型数据库这里不再适用，用的是nosql,比如mongodb数据库，工业用hbase 键值对直接查找

所以这里涉及到离线数据和在线数据的同步问题
工业上即为把hive的数据同步到hbase当中
从特征的角度分为离线特征和在

流程：
召回->'粗排'->精排
1：粗排y=model(item,context) 没有用户特征
   精排y=model(user,item,context) = learn to rank
2：其中粗排可以不要，粗排存在的意义在于降低系统性能开销
3：精排直接产生topn截断
4: 召回在有大量候选时还是很有必要，判断已有数据排序是否会造成0.1的latency -> latency>0.1 effect user experience
5: 召回组（设计召回算法，有多个召回分支，返回多类型key的字典,多个分支召回后，经过人工选定的阈值截断，注意
   召回分支内部排序，不同召回分支输出的结果去重后做为模型的输入
）-> 排序组
6：粗排->百度搜索算法中的粗排与精排->https://zhuanlan.zhihu.com/p/69825651 怕以后不再了在本repo里面也有
7: 更新时间一般是天级别，离线跑（老的item可能会下线，新的item可能会产生）
8：召回算法的校验标准：试验桶的流量点击率有没有增长

app客户端埋点->用户产生相应的点击（点赞 评论等）->回传服务器 -> kafka 无延时地上传到实时计算集群 storm -> label拼接 行程log
-> 数据建模-> rerank -> 给用户呈现的结果
注意模型的结果不是最终呈现给用户的结果，需要根据业务逻辑将规则打散：理解->某明星新闻今日必须放在第一条

今日头条的搜索底纹词也是一种推荐
右上角红点叫飘红 飘红比不飘红点击率增加10个p，行业经验
图片展示竖版的点击率比横版的点击率高10个p，行业经验

推荐系统实际上是三方玩耍
对于用户来说 获得乐趣 提升视野等
对于网站来说 持续运营，获取利润
对于内容提供方来说 留住长尾用户 获取互动和认可 获取收益

计算相似度的方法 可以从用户的角度或者商品的角度
1）jaccard 交集数目处于并集数目
2）余弦相似度 交集数目除以 子集数目乘积开方

